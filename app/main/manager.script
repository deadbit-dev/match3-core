local ____exports = {}
local druid = require("druid.druid")
local default_style = require("druid.styles.default.style")
local ____Ads = require("modules.Ads")
local BannerPos = ____Ads.BannerPos
local ____Manager = require("modules.Manager")
local register_manager = ____Manager.register_manager
local ____level = require("game.level")
local load_levels_config = ____level.load_levels_config
local ____utils = require("game.utils")
local add_coins = ____utils.add_coins
local delete_mounts = ____utils.delete_mounts
local remove_ad = ____utils.remove_ad
function ____exports.init(self)
    msg.post(".", "acquire_input_focus")
    register_manager()
    Manager.init(
        function()
            EventBus.on(
                "ON_SCENE_LOADED",
                function(message)
                    local name = message.name
                    if message.name == "game" then
                        Ads.show_banner(BannerPos.POS_BOTTOM_CENTER)
                    else
                        Ads.hide_banner()
                    end
                end
            )
            if System.platform == "HTML5" and HtmlBridge.get_platform() == "ok" then
                HtmlBridge.start_resize_monitor()
            end
            Scene.load_resource("main", "shared_gui")
            if System.platform == "HTML5" then
                local is_debug = html5.run("new URL(location).searchParams.get('debug')||'0'") == "1"
                local is_clear = html5.run("new URL(location).searchParams.has('delete_mounts')") == "1"
                if Ads.get_social_platform() == "yandex" then
                    local payload = HtmlBridge.get_payload()
                    if (string.find(payload, "delete_mounts", nil, true) or 0) - 1 > -1 then
                        is_clear = true
                    end
                    if (string.find(payload, "debug", nil, true) or 0) - 1 > -1 then
                        is_debug = true
                    end
                end
                if is_clear then
                    log("delete mounts")
                    delete_mounts()
                end
                if is_debug then
                    GAME_CONFIG.debug_levels = true
                end
                if HtmlBridge.get_platform() == "yandex" then
                    HtmlBridge.init_purchases(function(status, data)
                        if not status then
                            Log.error("Yandex init_purchases error")
                        else
                            local products = data
                            GAME_CONFIG.products = products
                            GAME_CONFIG.has_payments = true
                            log("Yandex init_purchases success")
                            HtmlBridge.get_purchases(function(status, data)
                                if not status then
                                    return
                                end
                                local purchases = data
                                log("Yandex get_purchases success", purchases)
                                do
                                    local i = 0
                                    while i < #purchases do
                                        local purchase = purchases[i + 1]
                                        local id_product = purchase.productID
                                        log("process buyed:", purchase)
                                        if id_product == "maney150" then
                                            add_coins(150)
                                            GameStorage.set("was_purchased", true)
                                            HtmlBridge.consume_purchase(
                                                purchase.purchaseToken,
                                                function()
                                                end
                                            )
                                        elseif id_product == "maney300" then
                                            add_coins(300)
                                            GameStorage.set("was_purchased", true)
                                            HtmlBridge.consume_purchase(
                                                purchase.purchaseToken,
                                                function()
                                                end
                                            )
                                        elseif id_product == "maney800" then
                                            add_coins(800)
                                            GameStorage.set("was_purchased", true)
                                            HtmlBridge.consume_purchase(
                                                purchase.purchaseToken,
                                                function()
                                                end
                                            )
                                        elseif id_product == "noads1" then
                                            remove_ad(24 * 60 * 60)
                                            HtmlBridge.consume_purchase(
                                                purchase.purchaseToken,
                                                function()
                                                end
                                            )
                                        elseif id_product == "noads7" then
                                            remove_ad(24 * 60 * 60 * 7)
                                            HtmlBridge.consume_purchase(
                                                purchase.purchaseToken,
                                                function()
                                                end
                                            )
                                        elseif id_product == "noads30" then
                                            remove_ad(24 * 60 * 60 * 30)
                                            HtmlBridge.consume_purchase(
                                                purchase.purchaseToken,
                                                function()
                                                end
                                            )
                                        end
                                        i = i + 1
                                    end
                                end
                            end)
                            EventBus.send("PURCHASE_INITIALIZED")
                        end
                    end)
                end
            end
            default_style.scroll.WHEEL_SCROLL_SPEED = 10
            default_style.button.DISABLED_COLOR = vmath.vector4(1)
            druid.set_default_style(default_style)
            Sound.attach_druid_click("btn")
            Camera.set_go_prjection(-1, 1, -3, 3)
            local is_shown = GameStorage.get("move_showed")
            if System.platform == "HTML5" then
                HtmlBridge.game_ready()
            end
            Metrica.report("data", {game_ready = {is_first = not is_shown}})
            timer.delay(
                0,
                false,
                function()
                    load_levels_config()
                    if System.platform == "HTML5" and HtmlBridge.get_platform() == "yandex" then
                        HtmlBridge.get_flags(
                            {defaultFlags = {movie_btn = "0", is_movie = "1"}},
                            function(status, data)
                                if status then
                                    if data.movie_btn ~= nil then
                                        GAME_CONFIG.movie_btn = data.movie_btn == "1"
                                    end
                                    if data.is_movie ~= nil then
                                        GAME_CONFIG.is_movie = data.is_movie == "1"
                                    end
                                    log(
                                        "Yandex get_flags success",
                                        data,
                                        (("set:" .. tostring(GAME_CONFIG.movie_btn)) .. "/") .. tostring(GAME_CONFIG.is_movie)
                                    )
                                end
                                Scene.load(is_shown and "map" or (GAME_CONFIG.is_movie and "movie" or "game"))
                                if not is_shown and not GAME_CONFIG.is_movie then
                                    Scene.try_load_async("map")
                                end
                            end
                        )
                    else
                        Scene.load(is_shown and "map" or "movie")
                    end
                    Scene.set_bg("#88dfeb")
                end
            )
        end,
        true
    )
end
function ____exports.on_message(self, message_id, _message, sender)
    Manager.on_message_main(self, message_id, _message, sender)
end
init = ____exports.init
on_message = ____exports.on_message

