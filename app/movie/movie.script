local ____exports = {}
local on_end
function on_end()
    Sound.stop("car")
    Sound.stop("crash")
    Sound.stop("vcat")
    Sound.stop("meay")
    EventBus.send("MOVIE_END")
end
function ____exports.init(self)
    Manager.init_script()
    msg.post(".", "acquire_input_focus")
    local anim_props = {blend_duration = 0, playback_rate = 0}
    spine.play_anim("#spinemodel", "start", go.PLAYBACK_ONCE_FORWARD, anim_props)
    EventBus.on(
        "START_MOVIE",
        function()
            Sound.play("car")
            timer.delay(
                1,
                false,
                function()
                    Sound.play("crash")
                end
            )
            timer.delay(
                1.7,
                false,
                function()
                    Sound.play("crash")
                end
            )
            timer.delay(
                2.5,
                false,
                function()
                    Sound.play("vcat")
                end
            )
            timer.delay(
                5,
                false,
                function()
                    Sound.play("meay")
                end
            )
            local anim_props = {blend_duration = 0, playback_rate = 1}
            spine.play_anim(
                "#spinemodel",
                "start",
                go.PLAYBACK_ONCE_FORWARD,
                anim_props,
                function(____self, message_id, message, sender)
                    if message_id ~= hash("spine_animation_done") then
                        return
                    end
                    on_end()
                end
            )
        end
    )
end
function ____exports.on_message(self, message_id, message, sender)
    Manager.on_message(self, message_id, message, sender)
end
function ____exports.on_input(self, action_id, action)
    if action_id == hash("touch") and action.released then
        on_end()
    end
end
function ____exports.final(self)
    Scene.unload_all_resources("movie")
    EventBus.off_all_current_script()
    Manager.final_script()
end
init = ____exports.init
on_message = ____exports.on_message
on_input = ____exports.on_input
final = ____exports.final

