local ____exports = {}
local druid = require("druid.druid")
function ____exports.init(self)
    Manager.init_gui()
    self.druid = druid.new(self)
    self.busters = GAME_CONFIG.levels[GameStorage.get("current_level") + 1].busters
    self.druid:new_button(
        "restart_button",
        function() return Scene.restart() end
    )
    self.druid:new_button(
        "revert_step_button",
        function() return Manager.send_game("REVERT_STEP") end
    )
    self.druid:new_button(
        "hammer_button",
        function()
            if GameStorage.get("hammer_counts") > 0 then
                self.busters.hammer_active = not self.busters.hammer_active
            end
        end
    )
end
function ____exports.on_input(self, action_id, action)
    return self.druid:on_input(action_id, action)
end
function ____exports.update(self, dt)
    self.druid:update(dt)
    gui.set_alpha(
        gui.get_node("hammer_button"),
        self.busters.hammer_active and 0.5 or 1
    )
    gui.set_text(
        gui.get_node("hammer_counts"),
        tostring(GameStorage.get("hammer_counts"))
    )
end
function ____exports.on_message(self, message_id, message, sender)
    Manager.on_message_gui(self, message_id, message, sender)
    self.druid:on_message(message_id, message, sender)
end
function ____exports.final(self)
    self.druid:final()
end
init = ____exports.init
on_input = ____exports.on_input
update = ____exports.update
on_message = ____exports.on_message
final = ____exports.final

